TODO
====

DONE:

 - Make a controllable player tank
 - Add the connection UI
 - Allow up to 4 players to join and get placed
 - Each tank needs a different color
 - Each tank needs it's name displayed
 - Add bullets, health and damage
 - Add a health bar
 - Add explosion (bullet and tank)
 - Add "loop" to have a winner and allow restarting
   |-> Zoom out after death to see the whole battle?
 - Set sane starting rotation for all players
 - Add cover to make play actually interesting
 - Keep players in the player area!
 - Make color coded bullets for each player
 - Add a one-player test mode to make it easier to test gameplay changes
 - Add health power-up
 - Add more power ups
   |-> Spread bullets
   |-> Target bullets
 - Use Nakama to track user accounts and do match making
   |-> Use GDScript to talk to Nakama via REST and Socket
 - Use WebRTC to connect to peers
   |-> Start with same local client (like we've been using), so needs GDNative
 - Give users choice of who they connect to:
   * "Find match with ____ minimum players"
   * "Create match to share with friends"
   * "Join match with given ID"
 - Make web version
   |-> Make sure GDScript can talk to Nakama over Websockets
 - Ability to return to connection screen
 - Add a "practice mode" where you can drive around and shot stuff
 - Get GitLab CI publishing to GitLab pages and Itch.io

MILESTONE+1:

 - Finish and publish Nakama Client
   * Make the REST API complete (some generation involved)
   * Add documentation (some generation involved)
   * Put in Godot Asset Library
   * Write blog post
   * Promote on Godot Reddit
 - Reduce the number of RPC updates sent (only send when something changes)
   |-> This could be done by sending inputs (keys pressed) rather than
       positions and rotations. So, sending global mouse position rather
       than turret rotation (which is constantly changing)
 - Look into issue where Arturo picks up more health than everybody else

MILESTONE+2:

 - Improve game "feedback"
   * Better indication that a tank got hit
 - Limit all powerups to 20 seconds?
   * Show current power up next to player name (flash when low)
 - Gameplay ideas to test:
   * Count down to next drop crates (start at 5 seconds?)
   * A "chanrged shot" that causes more damage? To encourage more careful
     firing.
   * More "tanky" feel (acceleration/deceleration, turret rotation limit, etc)
 - Polish:
   * Muzzle flash
   * Bullet smoke
   * Explosion particles
   * Tank tracks
   * Movement dust

MILESTONE+3:

 - Match score keeping
   * Stats (bullets fired vs hits, total damage caused)
   * "Sets" like 2 out of 3, best out of 5
 - Add Nakama leaderboard (maybe just wins at first)

BACKLOG (the "maybe" things):

 - Get web version working on Mobile
   * On-screen tank controls
   * Show the keyboard when focusing controls:
     o https://www.reddit.com/r/godot/comments/8r6dgf/godot_31dev_html5_export_mobile_devices_and/
 - Allow users to use "practice mode" while they wait for matchmaking
 - Add options for controls, enabling mouse capture, etc
 - Add game modes like "capture the flag"
 - Encapsulate the different bullet types into a single unit such that
   you could theoretically mod a new bullet type into the project
 - Make the "target" of targeted bullets clear (highlight selected tank)
 - Allow "stacking" powerups? Like, targetted/spread?
 - "Fire" bullet powerup: area of effect where it lands with higher damage
 - "Defense" powerup: take no damage (or reduced damage) for 20 seconds
 - "Zoom" powerup: increased movement speed for 20 seconds
 - "Invisibility" powerup: tank is invisible to other players for 20 seconds

